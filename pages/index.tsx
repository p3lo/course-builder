import axios from 'axios';
import produce from 'immer';
import { ObjectId } from 'mongoose';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useState } from 'react';
import { useRecoilState } from 'recoil';
import slugify from 'slugify';
import dbConnect from '../lib/dbConnect';
import CourseBuilder from '../models/CourseBuilder';
import { courseBuildAtom } from '../recoil/atoms/courseBuildAtom';
import { Course, CourseName } from '../types';

const Home: React.FC<{ courses: CourseName[] }> = ({ courses }) => {
  const [courseTitle, setCourseTitle] = useState<string>('');
  const [courseInfo, setCourseInfo] = useRecoilState<Course>(courseBuildAtom);
  const router = useRouter();

  const createCourse = () => {
    if (!courseTitle) {
      return;
    }
    const slug = slugify(courseTitle, { lower: true });
    axios.get(`/api/courseBuilder/${slug}`).then((response) => {
      if (response.data.course) {
        setCourseInfo(response.data.course);
      } else {
        const setSlug = produce(courseInfo, (draft) => {
          draft.slug = slug;
          draft.courseName = courseTitle;
        });
        setCourseInfo(setSlug);
      }
      router.push('/builder/newCourse');
    });
  };

  const deleteBySlug = (slug: string): void => {
    axios.delete(`/api/courseBuilder/${slug}`).then((response) => console.log(response));
  };
  const loadBySlug = (slug: string): void => {
    axios.get(`/api/courseBuilder/${slug}`).then((response) => {
      setCourseInfo(response.data.course);
    });
    router.push('/builder/newCourse');
  };

  return (
    <div className="w-full screen-h">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <input
          type="text"
          className="border outline-none p-3"
          value={courseTitle}
          onChange={(e) => setCourseTitle(e.target.value)}
        />
        <button className="p-3 border mb-3" onClick={createCourse}>
          Create course
        </button>
        {courses.map((item, key) => (
          <div className="flex space-x-2" key={key}>
            <p>
              {item.courseName} {item.slug}
            </p>
            <button className="border" onClick={() => deleteBySlug(item.slug)}>
              Delete
            </button>
            <button className="border" onClick={() => loadBySlug(item.slug)}>
              Load
            </button>
          </div>
        ))}
      </div>
    </div>
  );
};
export default Home;

export async function getStaticProps() {
  await dbConnect();
  const courses: CourseName[] = await CourseBuilder.find().select('slug courseName');
  return {
    props: {
      courses: JSON.parse(JSON.stringify(courses)),
    },
    revalidate: 1,
  };
}
